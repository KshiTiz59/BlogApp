{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\client\\\\src\\\\components\\\\singlePost\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: post.title,\n        className: \"singlePostTitleInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \" singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \" singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesInput\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"QK1gKtzoii4uUzYWyoiumUelCBE=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["E:/ReactJs/my-app/client/src/components/singlePost/SinglePost.jsx"],"names":["axios","useContext","useEffect","useState","useLocation","Link","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","photo","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../context/Context\";\r\nimport \"./singlePost.css\";\r\n\r\nexport default function SinglePost() {\r\n    const location =useLocation();\r\n    const path=(location.pathname.split(\"/\")[2]);\r\n    const [post,setPost]=useState({});\r\n  const PF=\"http://localhost:5000/images/\";\r\n  const {user}=useContext(Context);\r\n    const [title,setTitle]=useState(\"\")\r\n    const [desc,setDesc]=useState(\"\")\r\n    const [updateMode,setUpdateMode]=useState(false)\r\n\r\n\r\n\r\n    useEffect(()=>{\r\nconst getPost =async ()=>{\r\n    const res= await axios.get(\"/posts/\"+path);\r\n\r\n    setPost(res.data)\r\n};\r\ngetPost();\r\n    },[path]);\r\n\r\nconst handleDelete = async()=>{\r\n    try{\r\n    await axios.delete(`/posts/${post._id}`,{data:{username:user.username},});\r\n    window.location.replace(\"/\");\r\n\r\n    }catch(err){}\r\n}\r\n    return (\r\n        <div className=\"singlePost\">\r\n            <div className=\"singlePostWrapper\">\r\n                {post.photo &&(\r\n                <img  src={PF+post.photo} alt=\"\" className=\"singlePostImg\" />\r\n                )}\r\n                {\r\n                    updateMode ?\r\n                    (<input type=\"text\" value={post.title} className=\"singlePostTitleInput\"/>)\r\n                    :(\r\n                <h1 className=\"singlePostTitle\">\r\n                 {post.title}\r\n                 {post.username===user?.username &&(\r\n                 <div className=\"singlePostEdit\">\r\n                 <i className=\" singlePostIcon far fa-edit\" onClick={()=>setUpdateMode(true)}></i>\r\n                 <i className=\" singlePostIcon far fa-trash-alt\" onClick={handleDelete}></i>\r\n                 </div>\r\n                 )}\r\n             </h1>\r\n              )\r\n            }\r\n             <div className=\"singlePostInfo\">\r\n                 <span className=\"singlePostAuthor\">Author: \r\n                 <Link to={`/?user=${post.username}`} className=\"link\">\r\n                 <b>{post.username}</b>\r\n                 </Link>\r\n                 </span>\r\n                 <span className=\"singlePostDate\">{new Date(post.createdAt).toDateString()}</span>\r\n                 </div>\r\n                 {updateMode ?(<textarea className=\"singlePostDes\" />\r\n                 ):(\r\n                 <p className=\"singlePostDesInput\">\r\n                    {post.desc}\r\n                 </p>\r\n             ) }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}