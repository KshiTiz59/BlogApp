{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ReactJs\\\\my-app\\\\client\\\\src\\\\components\\\\singlePost\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\nimport Comment from \"../commentcard/Comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  const [comment, setcomment] = useState(\"\");\n  const [com, setcom] = useState([]);\n  const [c, setc] = useState({});\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n      setcom(res.data.comments);\n    };\n\n    getPost();\n  }, [path, c]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n\n  const handlecomment = async () => {\n    try {\n      const cdata = {\n        name: user.username,\n        comm: comment\n      };\n      console.log(cdata);\n      const data = await axios.patch(`/posts/${post._id}`, {\n        name: user.username,\n        comm: comment\n      });\n      console.log(data);\n      setc(data);\n      setcomment(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  com.sort((a, b) => parseInt(b.date) - parseInt(a.date));\n  console.log(com);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePost\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostWrapper\",\n        children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PF + post.photo,\n          alt: \"\",\n          className: \"singlePostImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          className: \"singlePostTitleInput\",\n          autoFocus: true,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"singlePostTitle\",\n          children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"singlePostEdit\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \" singlePostIcon far fa-edit\",\n              onClick: () => setUpdateMode(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \" singlePostIcon far fa-trash-alt\",\n              onClick: handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostAuthor\",\n            children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/?user=${post.username}`,\n              className: \"link\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: post.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostDate\",\n            children: new Date(post.createdAt).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 14\n        }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"singlePostDesInput\",\n          value: desc,\n          onChange: e => setDesc(e.target.value),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 18\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"singlePostDes\",\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 18\n        }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"singlePostButton\",\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ll\",\n        children: [\"Likes \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-thumbs-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ll\",\n        children: [\"Dislikes \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comcon\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Write a comment...\",\n                type: \"text\",\n                value: comment,\n                className: \"cominput\",\n                onChange: e => setcomment(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cb\",\n                onClick: handlecomment,\n                children: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 168\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"all\",\n            children: \"All Comments :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comcard\",\n            children: com.map(p => /*#__PURE__*/_jsxDEV(Comment, {\n              comment: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 26\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(SinglePost, \"gJyMo0/F1JRG2GWT8ZSYaTaISg4=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Project/ReactJs/my-app/client/src/components/singlePost/SinglePost.jsx"],"names":["axios","useContext","useEffect","useState","useLocation","Link","Context","Comment","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","comment","setcomment","com","setcom","c","setc","getPost","res","get","data","comments","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","handlecomment","cdata","name","comm","console","log","patch","sort","a","b","parseInt","date","photo","e","target","value","Date","createdAt","toDateString","map","p"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,SAApB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAO,kBAAP;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,QAAQ,GAAEL,WAAW,EAA3B;AACA,QAAMM,IAAI,GAAED,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAZ;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeX,QAAQ,CAAC,EAAD,CAA7B;AACF,QAAMY,EAAE,GAAC,+BAAT;AACA,QAAM;AAACC,IAAAA;AAAD,MAAOf,UAAU,CAACK,OAAD,CAAvB;AACE,QAAM,CAACW,KAAD,EAAOC,QAAP,IAAiBf,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACgB,IAAD,EAAMC,OAAN,IAAejB,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACkB,UAAD,EAAYC,aAAZ,IAA2BnB,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACoB,OAAD,EAAYC,UAAZ,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,GAAD,EAAOC,MAAP,IAAiBvB,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACwB,CAAD,EAAIC,IAAJ,IAAazB,QAAQ,CAAC,EAAD,CAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAClB,UAAM2B,OAAO,GAAE,YAAU;AACrB,YAAMC,GAAG,GAAE,MAAM9B,KAAK,CAAC+B,GAAN,CAAU,YAAUrB,IAApB,CAAjB;AACAI,MAAAA,OAAO,CAACgB,GAAG,CAACE,IAAL,CAAP;AACAd,MAAAA,QAAQ,CAACY,GAAG,CAACE,IAAJ,CAASf,KAAV,CAAR;AACAG,MAAAA,OAAO,CAACU,GAAG,CAACE,IAAJ,CAASb,IAAV,CAAP;AACAO,MAAAA,MAAM,CAACI,GAAG,CAACE,IAAJ,CAASC,QAAV,CAAN;AAEH,KAPD;;AAQAJ,IAAAA,OAAO;AACF,GAVQ,EAUP,CAACnB,IAAD,EAAQiB,CAAR,CAVO,CAAT;;AAYJ,QAAMO,YAAY,GAAG,YAAS;AAC1B,QAAG;AACH,YAAMlC,KAAK,CAACmC,MAAN,CAAc,UAAStB,IAAI,CAACuB,GAAI,EAAhC,EAAkC;AAACJ,QAAAA,IAAI,EAAC;AAACK,UAAAA,QAAQ,EAACrB,IAAI,CAACqB;AAAf;AAAN,OAAlC,CAAN;AACAC,MAAAA,MAAM,CAAC7B,QAAP,CAAgB8B,OAAhB,CAAwB,GAAxB;AACC,KAHD,CAGC,OAAMC,GAAN,EAAU,CAAE;AAChB,GALD;;AAMA,QAAMC,YAAY,GAAG,YAAU;AAC3B,QAAG;AACC,YAAMzC,KAAK,CAAC0C,GAAN,CAAW,UAAS7B,IAAI,CAACuB,GAAI,EAA7B,EAA+B;AACrCC,QAAAA,QAAQ,EAACrB,IAAI,CAACqB,QADuB;AAErCpB,QAAAA,KAFqC;AAGrCE,QAAAA;AAHqC,OAA/B,CAAN;AAMAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACC,KARL,CAQK,OAAMkB,GAAN,EAAU,CAAE;AACpB,GAVD;;AAWA,QAAMG,aAAa,GAAE,YAAS;AAC1B,QACA;AACI,YAAMC,KAAK,GAAG;AAACC,QAAAA,IAAI,EAAC7B,IAAI,CAACqB,QAAX;AAAsBS,QAAAA,IAAI,EAAEvB;AAA5B,OAAd;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACF,YAAMZ,IAAI,GAAG,MAAMhC,KAAK,CAACiD,KAAN,CAAa,UAASpC,IAAI,CAACuB,GAAI,EAA/B,EAAmC;AACpDS,QAAAA,IAAI,EAAC7B,IAAI,CAACqB,QAD0C;AAC/BS,QAAAA,IAAI,EAAEvB;AADyB,OAAnC,CAAnB;AAGCwB,MAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACAJ,MAAAA,IAAI,CAACI,IAAD,CAAJ;AACAR,MAAAA,UAAU,CAAC,EAAD,CAAV;AACF,KAVD,CAWA,OAAMgB,GAAN,EACA;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACH;AACJ,GAhBD;;AAiBAf,EAAAA,GAAG,CAACyB,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAUC,QAAQ,CAACD,CAAC,CAACE,IAAH,CAAR,GAAmBD,QAAQ,CAACF,CAAC,CAACG,IAAH,CAA9C;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYvB,GAAZ;AACI,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,mBACKZ,IAAI,CAAC0C,KAAL,iBACD;AAAM,UAAA,GAAG,EAAExC,EAAE,GAACF,IAAI,CAAC0C,KAAnB;AAA0B,UAAA,GAAG,EAAC,EAA9B;AAAiC,UAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAKQlC,UAAU,gBACT;AAAO,UAAA,IAAI,EAAC,MAAZ;AACD,UAAA,KAAK,EAAEJ,KADN;AAED,UAAA,SAAS,EAAC,sBAFT;AAGD,UAAA,SAAS,MAHR;AAID,UAAA,QAAQ,EAAGuC,CAAD,IAAKtC,QAAQ,CAACsC,CAAC,CAACC,MAAF,CAASC,KAAV;AAJtB;AAAA;AAAA;AAAA;AAAA,gBADS,gBAQd;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,qBACEzC,KADF,EAEEJ,IAAI,CAACwB,QAAL,MAAgBrB,IAAhB,aAAgBA,IAAhB,uBAAgBA,IAAI,CAAEqB,QAAtB,kBACD;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACA;AAAG,cAAA,SAAS,EAAC,6BAAb;AAA2C,cAAA,OAAO,EAAE,MAAIf,aAAa,CAAC,IAAD;AAArE;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAG,cAAA,SAAS,EAAC,kCAAb;AAAgD,cAAA,OAAO,EAAEY;AAAzD;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAwBC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,kBAAhB;AAAA,+CACA,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,UAASrB,IAAI,CAACwB,QAAS,EAAlC;AAAqC,cAAA,SAAS,EAAC,MAA/C;AAAA,qCACA;AAAA,0BAAIxB,IAAI,CAACwB;AAAT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBADA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAM,YAAA,SAAS,EAAC,gBAAhB;AAAA,sBAAkC,IAAIsB,IAAJ,CAAS9C,IAAI,CAAC+C,SAAd,EAAyBC,YAAzB;AAAlC;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBD,EAgCMxC,UAAU,gBAEX;AAAU,UAAA,SAAS,EAAC,oBAApB;AACC,UAAA,KAAK,EAAEF,IADR;AACc,UAAA,QAAQ,EAAGqC,CAAD,IAAKpC,OAAO,CAACoC,CAAC,CAACC,MAAF,CAASC,KAAV,CADpC;AAEE,UAAA,SAAS;AAFX;AAAA;AAAA;AAAA;AAAA,gBAFW,gBAMX;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA,oBACIvC;AADJ;AAAA;AAAA;AAAA;AAAA,gBAtCL,EA0CEE,UAAU,iBACX;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAqC,UAAA,OAAO,EAAEoB,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3CD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAgDI;AAAQ,QAAA,SAAS,EAAC,IAAlB;AAAA,0CAA6B;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAhDJ,eAiDI;AAAQ,QAAA,SAAS,EAAC,IAAlB;AAAA,6CAAgC;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDJ,EAoDQzB,IAAI,iBACA;AAAA,gCAEA;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACA;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACC;AAAA,sCAAM;AAAO,gBAAA,WAAW,EAAC,oBAAnB;AAAwC,gBAAA,IAAI,EAAC,MAA7C;AAAoD,gBAAA,KAAK,EAAEO,OAA3D;AAAoE,gBAAA,SAAS,EAAC,UAA9E;AAAyF,gBAAA,QAAQ,EAAGiC,CAAD,IAAKhC,UAAU,CAACgC,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlH;AAAA;AAAA;AAAA;AAAA,sBAAN,eAAkJ;AAAQ,gBAAA,SAAS,EAAC,IAAlB;AAAuB,gBAAA,OAAO,EAAEf,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAOH;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEA;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,sBACKlB,GAAG,CAACqC,GAAJ,CAASC,CAAD,iBACL,QAAC,OAAD;AAAS,cAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPG;AAAA,sBArDZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA8EH;;GA3IuBvD,U;UACJJ,W;;;KADII,U","sourcesContent":["import axios from \"axios\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../context/Context\";\r\nimport \"./singlePost.css\";\r\nimport Comment from \"../commentcard/Comment\"\r\nexport default function SinglePost() {\r\n    const location =useLocation();\r\n    const path=(location.pathname.split(\"/\")[2]);\r\n    const [post,setPost]=useState({});\r\n  const PF=\"http://localhost:5000/images/\";\r\n  const {user}=useContext(Context);\r\n    const [title,setTitle]=useState(\"\")\r\n    const [desc,setDesc]=useState(\"\")\r\n    const [updateMode,setUpdateMode]=useState(false)\r\n    const [comment  , setcomment] = useState(\"\") ;\r\n    const [com , setcom] = useState([]) ;\r\n    const [c ,setc ] = useState({}); \r\n\r\n    useEffect(()=>{\r\nconst getPost =async ()=>{\r\n    const res= await axios.get(\"/posts/\"+path);\r\n    setPost(res.data);\r\n    setTitle(res.data.title);\r\n    setDesc(res.data.desc);\r\n    setcom(res.data.comments);\r\n     \r\n};\r\ngetPost();\r\n    },[path , c]);\r\n\r\nconst handleDelete = async()=>{\r\n    try{\r\n    await axios.delete(`/posts/${post._id}`,{data:{username:user.username},});\r\n    window.location.replace(\"/\");\r\n    }catch(err){}\r\n}\r\nconst handleUpdate = async ()=>{\r\n    try{\r\n        await axios.put(`/posts/${post._id}`,{\r\n        username:user.username,\r\n        title,\r\n        desc,\r\n     }\r\n    );\r\n        setUpdateMode(false);\r\n        }catch(err){}\r\n}\r\nconst handlecomment =async()=>{\r\n    try\r\n    {\r\n        const cdata = {name:user.username , comm: comment } ; \r\n        console.log(cdata)\r\n      const data = await axios.patch(`/posts/${post._id}` , {\r\n        name:user.username , comm: comment\r\n       }) \r\n       console.log(data)\r\n       setc(data) ;\r\n       setcomment(\"\")\r\n    }\r\n    catch(err)\r\n    {\r\n        console.log(err)\r\n    }\r\n}\r\ncom.sort((a ,b )=> parseInt(b.date) - parseInt(a.date)); \r\nconsole.log(com);\r\n    return (\r\n        <>\r\n        <div className=\"singlePost\">\r\n            <div className=\"singlePostWrapper\">\r\n                {post.photo &&(\r\n                <img  src={PF+post.photo} alt=\"\" className=\"singlePostImg\" />\r\n                )}\r\n                {\r\n                    updateMode ?\r\n                    (<input type=\"text\" \r\n                    value={title} \r\n                    className=\"singlePostTitleInput\"\r\n                    autoFocus\r\n                    onChange={(e)=>setTitle(e.target.value)}\r\n                    />)\r\n                    :(\r\n                <h1 className=\"singlePostTitle\">\r\n                 {title}\r\n                 {post.username===user?.username &&(\r\n                 <div className=\"singlePostEdit\">\r\n                 <i className=\" singlePostIcon far fa-edit\" onClick={()=>setUpdateMode(true)}></i>\r\n                 <i className=\" singlePostIcon far fa-trash-alt\" onClick={handleDelete}></i>\r\n                 </div>\r\n                 )}\r\n             </h1>\r\n              )\r\n            }\r\n             <div className=\"singlePostInfo\">\r\n                 <span className=\"singlePostAuthor\">Author: \r\n                 <Link to={`/?user=${post.username}`} className=\"link\">\r\n                 <b>{post.username}</b>\r\n                 </Link>\r\n                 </span>\r\n                 <span className=\"singlePostDate\">{new Date(post.createdAt).toDateString()}</span>\r\n                 </div>\r\n                 {updateMode ?\r\n                 (\r\n                 <textarea className=\"singlePostDesInput\"\r\n                  value={desc} onChange={(e)=>setDesc(e.target.value)}\r\n                   autoFocus />\r\n                 ):(\r\n                 <p className=\"singlePostDes\">\r\n                    {desc}\r\n                 </p>\r\n             )}\r\n             {updateMode && (\r\n             <button className=\"singlePostButton\" onClick={handleUpdate}>\r\n                 Update\r\n                 </button>\r\n             )}</div>\r\n            <button className=\"ll\">Likes <i class=\"fa fa-thumbs-up\"></i></button>\r\n            <button className=\"ll\">Dislikes <i class=\"fa fa-thumbs-down\"></i></button>\r\n\r\n             {\r\n                user && (\r\n                    <>\r\n               \r\n                    <div className=\"comment\">\r\n                    <div className=\"comcon\">\r\n                     <span><input placeholder=\"Write a comment...\" type=\"text\" value={comment} className=\"cominput\" onChange={(e)=>setcomment(e.target.value)}></input><button className=\"cb\" onClick={handlecomment}>submit</button></span>\r\n                     </div> \r\n                 </div>\r\n                 <div>\r\n                     <h2 className=\"all\">All Comments :</h2>\r\n                 <div className=\"comcard\">\r\n                     {com.map((p)=>(\r\n                         <Comment comment={p}/>\r\n                     ))}\r\n                 </div>\r\n                 </div>\r\n                 </>\r\n                )\r\n             }\r\n        \r\n        </div>\r\n       \r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}